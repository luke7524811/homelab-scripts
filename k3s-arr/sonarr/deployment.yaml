apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: sonarr
          image: lscr.io/linuxserver/sonarr:latest
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Denver"
          ports:
            - containerPort: 8989
          volumeMounts:
            - name: config
              mountPath: /config
            - name: tv
              mountPath: /tv
            - name: downloads
              mountPath: /downloads
            - name: anime # <-- ADD THIS BLOCK
              mountPath: /anime # <-- ADD THIS BLOCK
          readinessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config-pvc
        - name: tv
          persistentVolumeClaim:
            claimName: sonarr-tv-pvc
        - name: downloads
          persistentVolumeClaim:
            claimName: sonarr-downloads-pvc
        - name: anime # <-- ADD THIS BLOCK
          persistentVolumeClaim: # <-- ADD THIS BLOCK
            claimName: sonarr-anime-pvc # <-- ADD THIS BLOCK
